"""
Django settings for traqsale_cloud project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/



"""
# pylint: disable=wildcard-import

import os
import sys

from .installed_apps import*

#from celery.schedules import crontab

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.environ.get("DEBUG", default=0))

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")


# 'DJANGO_ALLOWED_HOSTS' should be a single string of hosts with a space between each.
# For example: 'DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]'
# http://e108a8a0.ngrok.io/ 
#ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")
ALLOWED_HOSTS = ['*']

# Application definition has been moved to installed_apps.py for easier common
# installed apps access


if (sys.argv[1:2] == ['test']):

    print("We are in test mode")
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.sqlite3',
    #         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    #     }
    # }

    DATABASES = {
        'default': {
            "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
            "NAME": os.environ.get("SQL_DATABASE", os.path.join(BASE_DIR, "db.sqlite3")),
            "USER": os.environ.get("SQL_USER", "user"),
            "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
            "HOST": os.environ.get("SQL_HOST", "localhost"),
            "PORT": os.environ.get("SQL_PORT", "5432"),
        }
    }

else:
    print("We are in production mode")
    DATABASES = {
        'default': {
            "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
            "NAME": os.environ.get("SQL_DATABASE", os.path.join(BASE_DIR, "db.sqlite3")),
            "USER": os.environ.get("SQL_USER", "user"),
            "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
            "HOST": os.environ.get("SQL_HOST", "localhost"),
            "PORT": os.environ.get("SQL_PORT", "5432"),
        }
    }

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "NAME": "traqsale_dev",
#         "USER": "webapp",
#         "PASSWORD": "qXKkn945ZCa4SWTUddK3",
#         "HOST": "aegeus.c1q9l5pgadky.us-east-1.rds.amazonaws.com",
#         "PORT": 5432,
#     }
# }

print(DATABASES)

############# Local
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATICFILES_DIRS = ()

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
TESTING_MEDIA_ROOT = MEDIA_ROOT + '/images/tests/'


#---------------- Celery Settings --------------------------------------
REDIS_PORT = os.environ["REDIS_PORT"]
REDIS_URL = f'redis://redis:{REDIS_PORT}/0'

# CELERY STUFF
CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Africa/Nairobi'

# CELERY_BROKER_URL = "sqs://%s:%s@" % (os.environ.get('AWS_QUEUE_ACCESS_KEY_ID'), os.environ.get('AWS_QUEUE_ACCESS_KEY'))
# CELERY_RESULT_BACKEND = None
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'Africa/Nairobi'


print("############################")
print(CELERY_BROKER_URL)

CELERY_BROKER_TRANSPORT_OPTIONS = {
    "region": "us-east-1",
    'queue_name_prefix': 'django-',
    'visibility_timeout': 7200,
    'polling_interval': 1
}


#---------------- End Celery Settings --------------------------------------

#---------------- Channel Settings --------------------------------------
ASGI_APPLICATION = "traqsale_cloud.asgi.application"
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [(REDIS_URL)]
        },
    },
}
#---------------- End Channel Settings --------------------------------------





